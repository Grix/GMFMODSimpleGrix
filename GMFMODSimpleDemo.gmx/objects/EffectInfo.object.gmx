<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>EffectInfo_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>close = instance_create(x,y,ButClose)
close.owner = id;

code = instance_create(x+30,y,ButCode)
code.owner = id;

d = close.bbox_bottom+2
active = instance_create(x+10,d,ButActive)
active.owner = id;

d=active.bbox_bottom+2;
bypass = instance_create(x+10,d,ButBypass)
bypass.owner = id;

d=bypass.bbox_bottom+2;
vol = instance_create(x+10,d,ButVol)
vol.owner = id;

d=vol.bbox_bottom+2;
pan = instance_create(x+10,d,ButPan)
pan.owner = id;
d = pan.bbox_bottom+2

numparams = 0;
params = 0;
alarm[0] = 1;

image_yscale = 1/32 * (pan.bbox_bottom-bbox_top)
moving = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(active) instance_destroy()
with(bypass) instance_destroy()
with(close) instance_destroy()
with(vol) instance_destroy()
with(pan) instance_destroy()
with(code) instance_destroy()

    i = 0;
    repeat(numparams)
    {
        with(params[i]) instance_destroy()
        i+=1;
    }

FMODEffectFree(effect);</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i;
i = 0;
numparams = 0
repeat(FMODEffectGetNumParams(effect))
{
    with(instance_create(x+10,d,efParam))
    {
        p = i;
        other.d=bbox_bottom+2;
        other.params[i] = id;
        owner = other.id
        name = FMODEffectGetParamName(other.effect,i)
        label = FMODEffectGetParamLabel(other.effect,i)
        desc = FMODEffectGetParamDesc(other.effect,i)
        vmin = FMODEffectGetParamMin(other.effect,i)
        vmax = FMODEffectGetParamMax(other.effect,i)
        other.image_yscale = 1/32 * (bbox_bottom-other.bbox_top)

    }
    i+=1;
}
numparams = i;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(moving)
{
    x -= oldx-mouse_x;
    y -= oldy-mouse_y;
    active.x -= oldx-mouse_x;
    active.y -= oldy-mouse_y;
    bypass.x -= oldx-mouse_x;
    bypass.y -= oldy-mouse_y;
    close.x -= oldx-mouse_x;
    close.y -= oldy-mouse_y;
    code.x -= oldx-mouse_x;
    code.y -= oldy-mouse_y;
    pan.x -= oldx-mouse_x;
    pan.y -= oldy-mouse_y;
    vol.x -= oldx-mouse_x;
    vol.y -= oldy-mouse_y;
    var i;
    i = 0;
    repeat(numparams)
    {
        (params[i]).x -= oldx-mouse_x;
        (params[i]).y -= oldy-mouse_y;
        i+=1;
    }
}
oldx = mouse_x;
oldy = mouse_y;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="EffectInfo">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(id&gt;other.id) 
{
    ox = x;
    oy = y;
    x+=10
    if(bbox_right&gt;room_width) 
    {
        x = xstart
        y+=10
    }
    if(y+20&gt;room_height) y = 0;
    
    active.x -= ox-x;
    active.y -= oy-y;
    bypass.x -= ox-x;
    bypass.y -= oy-y;
    close.x -= ox-x;
    close.y -= oy-y;
    code.x -= ox-x;
    code.y -= oy-y;
    pan.x -= ox-x;
    pan.y -= oy-y;
    vol.x -= ox-x;
    vol.y -= oy-y;
    var i;
    i = 0;
    repeat(numparams)
    {
        (params[i]).x -= ox-x;
        (params[i]).y -= oy-y;
        i+=1;
    }

}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>moving = false;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>moving = (collision_point(mouse_x,mouse_y,object_index,false,false) == id)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
