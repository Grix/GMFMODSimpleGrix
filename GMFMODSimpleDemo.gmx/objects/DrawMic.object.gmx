<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>note[0] = "";
explode_note_string("note",",",
   "C 0,C\#0,D 0,D\#0,E 0,F 0,F\#0,G 0,G\#0,A 0,A\#0,B 0,"+  
    "C 1,C\#1,D 1,D\#1,E 1,F 1,F\#1,G 1,G\#1,A 1,A\#1,B 1,"+  
    "C 2,C\#2,D 2,D\#2,E 2,F 2,F\#2,G 2,G\#2,A 2,A\#2,B 2,"+  
    "C 3,C\#3,D 3,D\#3,E 3,F 3,F\#3,G 3,G\#3,A 3,A\#3,B 3,"+  
    "C 4,C\#4,D 4,D\#4,E 4,F 4,F\#4,G 4,G\#4,A 4,A\#4,B 4,"+  
    "C 5,C\#5,D 5,D\#5,E 5,F 5,F\#5,G 5,G\#5,A 5,A\#5,B 5,"+  
    "C 6,C\#6,D 6,D\#6,E 6,F 6,F\#6,G 6,G\#6,A 6,A\#6,B 6,"+  
    "C 7,C\#7,D 7,D\#7,E 7,F 7,F\#7,G 7,G\#7,A 7,A\#7,B 7,"+  
    "C 8,C\#8,D 8,D\#8,E 8,F 8,F\#8,G 8,G\#8,A 8,A\#8,B 8,"+  
    "C 9,C\#9,D 9,D\#9,E 9,F 9,F\#9,G 9,G\#9,A 9,A\#9,B 9");

 
notefreq[0] = 0;
explode_notefreq_real("notefreq",",",
      "16.35,17.32,18.35,19.45,20.60,21.83,23.12,24.50,25.96,27.50,29.14,30.87,"+
      "32.70,34.65,36.71,38.89,41.20,43.65,46.25,49.00,51.91,55.00,58.27,61.74,"+
      "65.41,69.30,73.42,77.78,82.41,87.31,92.50,98.00,103.83,110.00,116.54,123.47,"+
     "130.81,138.59,146.83,155.56,164.81,174.61,185.00,196.00,207.65,220.00,233.08,246.94,"+
     "261.63,277.18,293.66,311.13,329.63,349.23,369.99,392.00,415.30,440.00,466.16,493.88,"+
     "523.25,554.37,587.33,622.25,659.26,698.46,739.99,783.99,830.61,880.00,932.33,987.77,"+
    "1046.50,1108.73,1174.66,1244.51,1318.51,1396.91,1479.98,1567.98,1661.22,1760.00,1864.66,1975.53,"+
    "2093.00,2217.46,2349.32,2489.02,2637.02,2793.83,2959.96,3135.96,3322.44,3520.00,3729.31,3951.07,"+
    "4186.01,4434.92,4698.64,4978.03,5274.04,5587.65,5919.91,6271.92,6644.87,7040.00,7458.62,7902.13,"+
    "8372.01,8869.84,9397.27,9956.06,10548.08,11175.30,11839.82,12543.85,13289.75,14080.00,14917.24,15804.26"
);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(demofont)

  OUTPUTRATE  =        48000
 SPECTRUMSIZE =       8192
 SPECTRUMRANGE  =     (OUTPUTRATE / 2.0)      /* 0 to nyquist */
 BINSIZE =     (SPECTRUMRANGE / SPECTRUMSIZE)
if(MicObj.image_index == 0) exit;
draw_set_color(c_lime);
maxv = 256
l1 = ds_list_create()
l2 = ds_list_create()
FMODInstanceGetSpectrumSnapshot2(MicObj.instance,0,SPECTRUMSIZE); //this get it all so the slots are filed in the right spot for freq calc
FMODNormalizeSpectrumData(0,maxv /*SPECTRUMSIZE no need to look at it all since we only want voice range*/)
FMODSnapShotToDsList(0,maxv /*SPECTRUMSIZE no need to look at it all*/,l1);
FMODInstanceGetWaveSnapshot2(MicObj.instance,0,maxv);
FMODNormalizeWaveData(0,maxv)
FMODSnapShotToDsList(0,maxv,l2);
//show_debug_message(FMODErrorStr(FMODGetLastError()))

h = 100;
w = 400;
xx = x;
yy = y;
draw_set_color(c_white)
//draw_text(x,y,"Detected")
draw_set_blend_mode(bm_add);
i = 0;
repeat(maxv-1)
{
    //draw_line(xx,yy-(ord(string_char_at(specl,i))/255)*h,xx+w/maxv,yy-(ord(string_char_at(specl,i+1))/255)*h)
    draw_line_color(xx,yy-ds_list_find_value(l1,i) *h,xx+w/maxv,yy-ds_list_find_value(l1,i+1)*h,c_red,c_red)
    draw_line_color(xx,yy-ds_list_find_value(l2,i) *h,xx+w/maxv,yy-ds_list_find_value(l2,i+1)*h,c_blue,c_blue)
    i+=1;
    xx+=w/maxv;
}
draw_set_blend_mode(bm_normal);

mmax = 0;
        bin = 0;
        for (count = 0; count &lt; maxv /*SPECTRUMSIZE no need to look at it all*/; count+=1)
        {
            val = ds_list_find_value(l1,count)
            if (val &gt; 0.5 &amp;&amp; val &gt; mmax)
            {
                mmax = val;
                bin = count;
            }
        }        

        dominanthz  = bin * BINSIZE;       /* dominant frequency min */

        dominantnote = 0;
        for (count = 0; count &lt; 119; count+=1)
        {
             if (dominanthz &gt;= notefreq[count] &amp;&amp; dominanthz &lt; notefreq[count + 1])
             {
                /* which is it closer to.  This note or the next note */
                if (abs(dominanthz - notefreq[count]) &lt; abs(dominanthz - notefreq[count+1]))
                {
                    dominantnote = count;
                }
                else
                {
                    dominantnote = count + 1;
                }
                break;
             }
        }
        draw_set_halign(fa_right)
        draw_set_color(c_lime)
        draw_text(x,y,"Detected rate#"+string(dominanthz) +"hz to #"+string( (bin + 0.99) * BINSIZE)+" hz");
        draw_set_halign(fa_left)
        draw_text(x+w,y,"Detected musical note#"+string(note[dominantnote])+"#("+string(notefreq[dominantnote]) +" hz)");

ds_list_destroy(l1)
ds_list_destroy(l2)

draw_text(400,400,string(FMODInstanceGetPosition(MicObj.instance)))
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
