<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Car2_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>DemoSoundObj</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>target = -100;
beepinstance = 0;
motorinstance = 0;
motorsound = 0;
beepsound = 0;
alarm[0] = 1;
alarm[1] = room_speed*5;
xx = 0;
yy = 0;
target = -100;
m_speed = 1;
m_Mass = 1;
snddist = 300;
MotorInstFreq = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>exit;
turn=sin(degtorad(point_direction(x,y,xx,yy)-image_angle));//keyboard_check(vk_left);
image_angle += turn*speed;

motion_add(image_angle,m_speed);
friction = speed/12;


with(instance_nearest(x,y,PCarObj))
{
    if(point_distance(x,y,other.x,other.y)&lt;=300)
    {
        if(!FMODInstanceIsPlaying(other.motorinstance))
        {
            other.motorinstance = FMODSoundLoop3d(other.motorsound,other.x,other.y,20,0);
        }
    }
    else
    {
        if(other.motorinstance)
        {
            FMODInstanceStop(other.motorinstance);
            other.motorinstance = 0;
        }
    }
}
FMODInstanceSetFrequency(motorinstance,MotorInstFreq*max(1,max(abs(hspeed),abs(vspeed),speed)/5));

FMODInstanceSet3dPosition(beepinstance,x,y,20);
FMODInstanceSet3dPosition(motorinstance,x,y,20);

target = collision_line(x,y,x+lengthdir_x(200,image_angle),y+lengthdir_y(200,image_angle),CarObj,true,true);
if!(target) target = collision_line(x,y,x+lengthdir_x(200,image_angle),y+lengthdir_y(200,image_angle),PCarObj,true,true);
if(target)
{
    //with(instance_nearest(x,y,PCarObj))
    //{
    if(point_distance(PCarObj.x,PCarObj.y,x,y)&lt;= snddist )
    {
    if(!FMODInstanceIsPlaying(beepinstance))
    {
        beepinstance = FMODSoundPlay3d(beepsound,x,y,20,false);
    }
    }
    //}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="CarObj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if!(place_meeting( x,y,other.id)) exit;
var ct;
ct = 0;
var a,xoff,yoff;
a = point_direction( x,y,other.x,other.y)
xoff = lengthdir_x( 1,a);
yoff = lengthdir_y( 1,a);
var om,mm;
om = other.m_Mass/m_Mass;
mm = m_Mass/other.m_Mass;
while( place_meeting( x,y,other.id) and ct &lt; 100)
{
    x -= xoff * om;
    y -= yoff * om;
    other.x += xoff * mm;
    other.y+=yoff * mm;
    ct +=1;
}
CollisionBalls(self,other);
//with(instance_nearest(x,y,PCarObj))
//{
if(point_distance(PCarObj.x,PCarObj.y,x,y)&lt;= 300 )
{
    FMODSoundPlay3d(global.crash,x,y,20,false)
}
//}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="PCarObj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if!(place_meeting( x,y,other.id)) exit;
var ct;
ct = 0;
var a,xoff,yoff;
a = point_direction( x,y,other.x,other.y)
xoff = lengthdir_x( .5,a);
yoff = lengthdir_y( .5,a);
var om,mm;
om = other.m_Mass/m_Mass;
mm = m_Mass/other.m_Mass;
while( place_meeting( x,y,other.id) and ct &lt; 100)
{
    x -= xoff * om;
    y -= yoff * om;
    other.x += xoff * mm;
    other.y+=yoff * mm;
    ct +=1;
}
CollisionBalls(self,other);
FMODSoundPlay3d(global.crash,x,y,20,false)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>FMODInstanceStop(motorinstance);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="1">
      <action>
        <libid>1</libid>
        <id>112</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_wrap</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(bbox_bottom&lt;view_yview[view_current]) exit;
if(bbox_right&lt;view_xview[view_current]) exit;
if(bbox_top&gt;view_yview[view_current]+view_hview[view_current]) exit;
if(bbox_left&gt;view_xview[view_current]+view_wview[view_current]) exit;
//draw_line (x,y,xx,yy)
draw_sprite_ext(sprite_index,-1,x,y,image_xscale,image_yscale,image_angle,image_blend,image_alpha);
event_inherited();</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>25,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
